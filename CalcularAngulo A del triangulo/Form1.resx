<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>